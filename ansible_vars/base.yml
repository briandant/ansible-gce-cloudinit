---
application_name: 'dataexchange'
application_root: '/Users/briandant/dataexchange'
application_user: 'briandant'

postgresql_version: 9.3
postgresql_encoding: 'UTF-8'
postgresql_locale: 'en_US.UTF-8'
postgresql_cluster_name: 'main'
postgresql_app_user_password: '0fpoy8s6)_@*jkpw2b&o'


postgresql_databases:
  - name: '{{ application_name }}'

postgresql_users:
  - name: '{{ application_name }}'
    pass: '{{ postgresql_app_user_password }}'

postgresql_user_privileges:
  - name: '{{ application_name }}'
    db: '{{ application_name }}'


letsencrypt_webroot_path: '/var/www/html'
letsencrypt_email: 'brian.dant@hey.com'
letsencrypt_renewal_command_args: '--renew-hook "systemctl restart nginx"'

# Ansistrano deploy settings
ansistrano_git_repo: 'git@github.com:briandant/dataexchange.git' # Location of the git repository

ansistrano_deploy_via: "git"
ansistrano_keep_releases: 5
ansistrano_deploy_to: '{{ application_root }}'
ansistrano_git_identity_key_path: '~/.ssh/id_rsa'
ansistrano_shared_paths: ['media', 'staticfiles']
ansistrano_shared_files: []
ansistrano_after_cleanup_tasks_file: "{{ playbook_dir }}/deploy_tasks/after-cleanup.yml"

# My stuff
gcp_cred_kind: "serviceaccount"
gcp_docker_registry: gcr.io
gcp_project: dataexchange-redux-313019
# dataexchange-311421
gcp_project_number: 1073747879403
# 141784097243
gcp_registry_full_prefix: "{{ gcp_docker_registry }}/{{ gcp_project }}"
gcp_image_project: cos-cloud
gcp_image_family: cos-89-lts
gcp_instance_name: dataexchange
gcp_instance_scopes:
  - default
# See machine types here: https://cloud.google.com/compute/docs/machine-types#n1_shared-core_machine_types
gcp_machine_type: g1-small
gcp_region: us-west1
gcp_zone: us-west1-a
# This key is tied to an account with "project owner" permissions.
# gcp_service_account_file: "dataexchange-311421-b1b8d9308172.json"

# APIs #
# The APIs need to be enabled on the project.
gcp_apis:
  - compute.googleapis.com
  - containerregistry.googleapis.com

# Default instance service account #
# A default account, with the following email, is created with all GCP projects and is
# tied closely to the instance.  It's therefore most easy and prudent to assign
# this as the one service account for the machine.
# See: https://cloud.google.com/iam/docs/service-accounts#default
gcp_default_service_account: "{{ gcp_project_number}}-compute@developer.gserviceaccount.com"
gcp_default_service_account_scopes:
  - https://www.googleapis.com/auth/devstorage.read_only

# Machine-creating service account #
gcp_machine_create_service_name: alphasphinx
gcp_machine_create_service_email: "service-{{ gcp_machine_create_service_name }}@{{ gcp_project}}.iam.gserviceaccount.com"
gcp_machine_create_service_file: "/tmp/{{ gcp_machine_create_service_name }}-service-account-key.json"
# See perms reference: https://cloud.google.com/iam/docs/permissions-reference
gcp_machine_create_user_roles:
  - roles/compute.instanceAdmin.v1
  - roles/compute.networkAdmin
  - roles/iam.serviceAccountUser
  - roles/compute.securityAdmin

# Deploy user account #
gcp_deploy_user: omegasphinx
gcp_deploy_userid: 2000
gcp_deploy_service_account_email: "service-{{ gcp_deploy_user }}@{{ gcp_project }}.iam.gserviceaccount.com"
gcp_deploy_service_account_file: "{{ gcp_deploy_user }}-service-account_key.json"
gcp_deploy_user_scopes:
  - https://www.googleapis.com/auth/devstorage.read_only
